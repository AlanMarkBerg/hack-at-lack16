<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="LRS Test" enabled="true">
      <stringProp name="TestPlan.comments">A simple test plan - Bare boned example</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="username" elementType="Argument">
            <stringProp name="Argument.name">username</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">LRS server username</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">LRS password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="lrsServerUrl" elementType="Argument">
            <stringProp name="Argument.name">lrsServerUrl</stringProp>
            <stringProp name="Argument.value">jisc.learninglocker.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Hostname of the LRS server (without http://)</stringProp>
          </elementProp>
          <elementProp name="lrsServerPort" elementType="Argument">
            <stringProp name="Argument.name">lrsServerPort</stringProp>
            <stringProp name="Argument.value">80</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">port of the LRS server (if not port 80)</stringProp>
          </elementProp>
          <elementProp name="lrsBasePath" elementType="Argument">
            <stringProp name="Argument.name">lrsBasePath</stringProp>
            <stringProp name="Argument.value">/data/xAPI/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">REST path</stringProp>
          </elementProp>
          <elementProp name="xAPIVersion" elementType="Argument">
            <stringProp name="Argument.name">xAPIVersion</stringProp>
            <stringProp name="Argument.value">1.0.1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="delay_ms" elementType="Argument">
            <stringProp name="Argument.name">delay_ms</stringProp>
            <stringProp name="Argument.value">1000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="threads" elementType="Argument">
            <stringProp name="Argument.name">threads</stringProp>
            <stringProp name="Argument.value">4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Authentication Hash Processor" enabled="true">
        <boolProp name="resetInterpreter">false</boolProp>
        <stringProp name="parameters">${username}:${password}</stringProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="script">import org.apache.commons.codec.binary.Base64;
byte[] encoded = Base64.encodeBase64(Parameters.getBytes(&quot;UTF-8&quot;));
String authHash = new String(encoded);
vars.put(&quot;authHash&quot;, authHash);</stringProp>
      </BeanShellPreProcessor>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">en-US,en</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Pragma</stringProp>
            <stringProp name="Header.value">no-cache</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Cache-Control</stringProp>
            <stringProp name="Header.value">no-cache</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">X-Experience-API-Version</stringProp>
            <stringProp name="Header.value">${xAPIVersion}</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">Basic ${authHash}</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${lrsServerUrl}</stringProp>
        <stringProp name="HTTPSampler.port">${lrsServerPort}</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="LAK16" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${threads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1460830924000</longProp>
        <longProp name="ThreadGroup.end_time">1460830924000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST first JISC statement" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{  &#xd;
   &quot;actor&quot;:{  &#xd;
      &quot;name&quot;:&quot;${__Random(100,999,name_start)}30254&quot;,&#xd;
      &quot;account&quot;:{  &#xd;
         &quot;homePage&quot;:&quot;http://moodle.data.alpha.jisc.ac.uk/&quot;,&#xd;
         &quot;name&quot;:&quot;${name_start}30254&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;context&quot;:{  &#xd;
      &quot;platform&quot;:&quot;Moodle&quot;,&#xd;
      &quot;extensions&quot;:{  &#xd;
         &quot;http://xapi.jisc.ac.uk/extensions/sessionId&quot;:{  &#xd;
            &quot;sessionId&quot;:&quot;${__UUID}&quot;&#xd;
         },&#xd;
         &quot;http://id.tincanapi.com/extension/ip-address&quot;:{  &#xd;
            &quot;ip-address&quot;:&quot;${__machineIP()}&quot;&#xd;
         },&#xd;
         &quot;http://lrs.learninglocker.net/define/extensions/info&quot;:&quot;University of Jisc Moodle&quot;,&#xd;
         &quot;http://xapi.jisc.ac.uk/extensions/courseArea&quot;:{  &#xd;
            &quot;id&quot;:&quot;http://moodle.data.alpha.jisc.ac.uk/course/view.php?id=${__Random(100,140,course)}&quot;,&#xd;
            &quot;http://xapi.jisc.ac.uk/extensions/vle_mod_id&quot;:&quot;MODS${course}&quot;&#xd;
         }&#xd;
      }&#xd;
   },&#xd;
   &quot;timestamp&quot;:&quot;2016-04-08T17:20:00-07:00&quot;,&#xd;
   &quot;verb&quot;:{  &#xd;
      &quot;id&quot;:&quot;http://id.tincanapi.com/verb/viewed&quot;,&#xd;
      &quot;display&quot;:{  &#xd;
         &quot;en&quot;:&quot;viewed&quot;&#xd;
      }&#xd;
   },&#xd;
   &quot;object&quot;:{  &#xd;
      &quot;id&quot;:&quot;http://moodle.data.alpha.jisc.ac.uk/mod/page/view.php?id=${course}&quot;,&#xd;
      &quot;definition&quot;:{  &#xd;
         &quot;type&quot;:&quot;http://xapi.jisc.ac.uk/define/vle/page&quot;,&#xd;
         &quot;name&quot;:{  &#xd;
            &quot;en&quot;:&quot;More Detail Page for course ${course}&quot;&#xd;
         },&#xd;
         &quot;description&quot;:{  &#xd;
            &quot;en&quot;:&quot;&lt;p&gt;More detail ${course}&lt;/p&gt;&quot;&#xd;
         },&#xd;
         &quot;extensions&quot;:{&#xd;
            &quot;http://xapi.jisc.ac.uk/extensions/applicationType&quot;:{  &#xd;
               &quot;type&quot;:&quot;http://xapi.jisc.ac.uk/define/vle&quot;&#xd;
            }&#xd;
         }&#xd;
      }&#xd;
   }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/data/xAPI/statements</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultAction guiclass="ResultActionGui" testclass="ResultAction" testname="Result Status Action Handler" enabled="true">
            <intProp name="OnError.action">3</intProp>
          </ResultAction>
          <hashTree/>
          <BSFPostProcessor guiclass="TestBeanGUI" testclass="BSFPostProcessor" testname="Set POSTed Statement ID" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">eval(&apos;var jsonResponse = &apos; + prev.getResponseDataAsString());
vars.put(&quot;postedStatementId&quot;, jsonResponse[0]);</stringProp>
            <stringProp name="scriptLanguage">javascript</stringProp>
          </BSFPostProcessor>
          <hashTree/>
        </hashTree>
        <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
          <stringProp name="TestPlan.comments">Initial example of delay</stringProp>
          <stringProp name="ConstantTimer.delay">${delay_ms}</stringProp>
          <stringProp name="RandomTimer.range">${delay_ms}</stringProp>
        </GaussianRandomTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get some statements" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/data/xAPI/statements</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
